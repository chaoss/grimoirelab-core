name: tests

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

jobs:

  backend:

    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        python-version: [3.11, 3.12]

    runs-on: ubuntu-latest
    name: Python ${{ matrix.python-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV
    - name: Install dependencies
      run: |
        poetry install -vvv
        poetry run pip install -r requirements_dev.txt
    - name: Set MySQL mode
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: ${{ job.services.mysql.ports[3306] }}
      run: |
        mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e "SET GLOBAL sql_mode = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'";
    - name: Lint files
      run: |
        poetry run ruff check --output-format=github
    - name : Check format
      run: |
        poetry run ruff format --diff
    - name: Tests
      run: |
        poetry run pytest -s

  frontend:

    strategy:
      matrix:
        node-version: [20.x]

    runs-on: ubuntu-latest
    name: Node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # 4.0.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./ui
        run: yarn install
      - name: Run ESLint
        working-directory: ./ui
        run: yarn lint
      - name: Check format
        working-directory: ./ui
        run: yarn format:check
      - name: Run unit tests
        working-directory: ./ui
        run: yarn test:unit
